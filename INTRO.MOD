IMPLEMENTATION MODULE Intro;

IMPORT Graph, IO, Lib, Exobius, Storage;

FROM Graph IMPORT
    ClearScreen, _GCLEARSCREEN,
    Rectangle, Polygon, Line, HLine, Circle, Ellipse, Disc, Plot, Arc;

FROM IO IMPORT KeyPressed;

FROM Lib IMPORT
    Delay;

FROM Exobius IMPORT
    SwapVGAPages, DisableVGAPageSwapping, PutPixel,
    Black,
    DarkestGrey, DarkGrey, Grey, LightGrey, LightestGrey,
    DarkestWhite, DarkWhite, White, LightWhite, LightestWhite,
    DarkestBlue, DarkBlue, Blue, LightBlue, LightestBlue,
    DarkestRed, DarkRed, Red, LightRed, LightestRed,
    DarkestBrown, DarkBrown, Brown, LightBrown, LightestBrown,
    DarkestGreen, DarkGreen, Green, LightGreen, LightestGreen,
    DarkestYellow, DarkYellow, Yellow, LightYellow, LightestYellow,
    DrawPlane, PlaneX, PlaneY, Width, Height,
    Count, GameSpeed,
    A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z;

CONST
    NoteDelay = 125;

PROCEDURE Infinite_Software;
BEGIN
    DisableVGAPageSwapping;
    FOR Count := 40 TO 265 BY 30 DO
        CASE Count OF
            |40: I(Count, 40);
                S(Count, 120);
            |70: N(Count, 40);
                O(Count, 120);
            |100: F(Count, 40);
                F(Count, 120);
            |130: I(Count, 40);
                T(Count, 120);
            |160: N(Count, 40);
                W(Count, 120);
            |190: I(Count, 40);
                A(Count, 120);
            |220: T(Count, 40);
                R(Count, 120);
            |250: E(Count, 40);
                E(Count, 120);
         END;
     END;
END Infinite_Software;

PROCEDURE FlashScreen() : BOOLEAN;
VAR
    Colors : ARRAY[0..9] OF CARDINAL;
    FlashIdx, FlashDelay : CARDINAL;
BEGIN
    Colors[0] := DarkestGrey; Colors[1] := DarkGrey; Colors[2] := Grey; Colors[3] := LightGrey; Colors[4] := LightestGrey;
    Colors[5] := DarkestWhite; Colors[6] := DarkWhite; Colors[7] := White; Colors[8] := LightWhite; Colors[9] := LightestWhite;
    FlashDelay := NoteDelay DIV 4;

    SwapVGAPages();
    FOR FlashIdx := 0 TO 9 DO
        Rectangle(0, 0, 320, 200, Colors[FlashIdx], TRUE);
        Infinite_Software;
        SwapVGAPages();
        Lib.Delay(FlashDelay);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;

    RETURN TRUE;
END FlashScreen;

PROCEDURE SpinRectangle() : BOOLEAN;
CONST
    SpinningDelay = 3;
VAR
    Width, HalfHeight, ScaledHalfHeight, PrevScaledHalfHeight, Left, Right, Top, Bottom : CARDINAL;
    Growing : BOOLEAN;
BEGIN
    HalfHeight := 100; Top := 0; Bottom := 200; Growing := FALSE;
    ScaledHalfHeight := HalfHeight;
    FOR Width := 320 TO 2 BY -1 DO
        Left := (320 - Width) DIV 2; Right := (320 + Width) DIV 2;
        Line(Left - 1, Top, Left - 1, Bottom, Black);
        Line(Left, Top, Left, Bottom, Black);
        Line(Right, Top, Right, Bottom, Black);
        Line(Right + 1, Top, Right + 1, Bottom, Black);
        
        (* Alternate growing/shrinking the height *)
        PrevScaledHalfHeight := ScaledHalfHeight;
        IF Growing THEN
            HalfHeight := (HalfHeight * 5) DIV 4;
            IF (HalfHeight > 100) THEN
                HalfHeight := 100;
                Growing := FALSE;
            END;
            ScaledHalfHeight := (HalfHeight * Width) DIV 320;
            Rectangle(Left, 100 - ScaledHalfHeight, Right, 100 - PrevScaledHalfHeight, LightestWhite, TRUE);
            Rectangle(Left, 100 + PrevScaledHalfHeight, Right, 100 + ScaledHalfHeight, LightestWhite, TRUE);
        ELSE
            HalfHeight := (HalfHeight * 3) DIV 4;
            IF (HalfHeight < 5) THEN
                HalfHeight := 5;
                Growing := TRUE;
            END;
            ScaledHalfHeight := (HalfHeight * Width) DIV 320;
            Rectangle(Left, 100 - PrevScaledHalfHeight, Right, 100 - ScaledHalfHeight, Black, TRUE);
            Rectangle(Left, 100 + ScaledHalfHeight, Right, 100 + PrevScaledHalfHeight, Black, TRUE);
        END;
        Lib.Delay(GameSpeed);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;
    RETURN TRUE;
END SpinRectangle;

PROCEDURE DrawStars;
BEGIN
    FOR Count := 1 TO 35 DO
        Plot (Lib.RANDOM (320), Lib.RANDOM(200) , (Lib.RANDOM(15))+15);
    END;
END DrawStars;

PROCEDURE MakeDiamond() : BOOLEAN;
CONST
    DiamondDelay = 1;
BEGIN
    DrawStars;
    FOR Count := 160 TO 320 DO
        Plot (Count, 100, LightestWhite);   Plot (320-Count, 100, LightestWhite);
        Plot (Count-2, 99, LightWhite);     Plot (320-Count+2, 99, LightWhite);
        Plot (Count-2, 101, LightWhite);    Plot (320-Count+2, 101, LightWhite);
        Plot (Count-4, 98, White);          Plot (320-Count+4, 98, White);
        Plot (Count-4, 102, White);         Plot (320-Count+4, 102, White);
        Plot (Count-6, 97, LightestBlue);   Plot (320-Count+6, 97, LightestBlue);
        Plot (Count-6, 103, LightestBlue);  Plot (320-Count+6, 103, LightestBlue);
        Plot (Count-8, 96, DarkWhite);      Plot (320-Count+8, 96, DarkWhite);
        Plot (Count-8, 104, DarkWhite);     Plot (320-Count+8, 104, DarkWhite);
        Plot (Count-10, 95, DarkestWhite);  Plot (320-Count+10, 95, DarkestWhite);
        Plot (Count-10, 105, DarkestWhite); Plot (320-Count+10, 105, DarkestWhite);
        Plot (Count-12, 94, DarkGrey);      Plot (320-Count+12, 94, DarkGrey);
        Plot (Count-12, 106, DarkGrey);     Plot (320-Count+12, 106, DarkGrey);
        Plot (Count-12, 93, DarkestGrey);   Plot (320-Count+12, 93, DarkestGrey);
        Plot (Count-12, 107, DarkestGrey);  Plot (320-Count+12, 107, DarkestGrey);
        Lib.Delay(DiamondDelay);
    END;
    RETURN (NOT KeyPressed());
END MakeDiamond;

PROCEDURE ExoLogo() : BOOLEAN;
CONST
    LineDelay = 3;
BEGIN
    E(60, 90); X(90, 90); O(120, 90); B(150, 90); I(180, 90); U(210, 90); S(240, 90);
    FOR Count := 50 TO 270 DO
        Rectangle(Count - 1, 70, Count, 130, Black, TRUE);
        PutPixel(Count, 70 + Lib.RANDOM(19), Yellow);
        PutPixel(Count, 130 - Lib.RANDOM(19), Yellow);
        IF (Count < 80) THEN E(60, 90);
        ELSIF (Count < 110) THEN X(90, 90);
        ELSIF (Count < 140) THEN O(120, 90);
        ELSIF (Count < 170) THEN B(150, 90);
        ELSIF (Count < 200) THEN I(180, 90);
        ELSIF (Count < 230) THEN U(210, 90);
        ELSE S(240, 90);
        END;
        Lib.Delay(LineDelay);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;
    Rectangle(269, 70, 270, 130, Black, FALSE);

    FOR Count := 1 TO 5 DO
        Lib.Delay(1000);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;

    RETURN TRUE;
END ExoLogo;

PROCEDURE WriteMyName() : BOOLEAN;
CONST
    GravityAccel = 0.2;
    TerminalVelocity = 3.0;
    NameLeft = 95; NameRight = 235; NameHeight = 50;
VAR
    NameY, NameVelocity : REAL;
    NameYCard, Bounces, NameImageSize : CARDINAL;
    NameAddress : ADDRESS;
BEGIN
    Bounces := 0;
    NameY := 1.0; NameYCard := CARDINAL(NameY);
    NameVelocity := TerminalVelocity;
    Graph.ClearScreen(Graph._GCLEARSCREEN);
    DrawStars;
    Rectangle(95, NameYCard - 1, NameRight, NameYCard + NameHeight, Black, TRUE);
    P(105, NameYCard); A(135, NameYCard); U(165, NameYCard); L(195, NameYCard);
    R(95, NameYCard+30); A(125, NameYCard+30); H(155, NameYCard+30); M(185, NameYCard+30); E(215, NameYCard+30);
    NameImageSize := CARDINAL(Graph.ImageSize(NameLeft, 0, NameRight, NameHeight + 1));
    Storage.ALLOCATE(NameAddress, NameImageSize);
    Graph.GetImage(NameLeft, NameYCard - 1, NameRight, NameYCard + NameHeight, NameAddress);

    WHILE (Bounces < 3) AND NOT (KeyPressed()) DO
        IF (NameVelocity < TerminalVelocity) THEN NameVelocity := NameVelocity + GravityAccel; END;
        NameY := NameY + NameVelocity; NameYCard := CARDINAL(NameY);

        IF (NameVelocity > 0.0) THEN
            Rectangle(NameLeft, NameYCard - CARDINAL(NameVelocity), NameRight, NameYCard, Black, TRUE);
        ELSE
            Rectangle(NameLeft, NameYCard + NameHeight, NameRight, NameYCard + NameHeight + CARDINAL(TerminalVelocity), Black, TRUE);
        END;

        IF (NameY > 124.9) THEN
            NameY := 125.0;
            NameVelocity := -NameVelocity;
            Bounces := Bounces + 1;
        END;
        NameYCard := CARDINAL(NameY);

        Graph.PutImage (NameLeft, NameYCard, NameAddress, Graph._GPSET);
        B(135 ,95); Y(165, 95);
        Lib.Delay(GameSpeed);

        IF (KeyPressed()) THEN Bounces := 1000; END;
    END;

    Storage.DEALLOCATE(NameAddress, NameImageSize);
    IF (Bounces < 900) THEN
        DrawStars;
        FOR Count := 1 TO 5 DO
            Lib.Delay(1000);
            IF (KeyPressed()) THEN RETURN FALSE; END;
        END;
    END;
    RETURN TRUE;
END WriteMyName;

PROCEDURE FillAtmosFear(ColData : ARRAY OF CHAR; AtmosX : CARDINAL);
CONST
    LogoBottom = 145;
VAR
    YOffset : CARDINAL;
    Color : BYTE;
BEGIN
    FOR YOffset := 0 TO 15 DO
        CASE (ColData[YOffset]) OF
            |'0': Color := 0; (* Black *)
            |'1': Color := 28; (* White *)
            |'2': Color := 23; (* Grey *)
        END;
        PutPixel(AtmosX, LogoBottom - YOffset, Color);
    END;
END FillAtmosFear;

PROCEDURE WriteAtmosFear() : BOOLEAN;
CONST
    MusicByHalfWidth = 100.0;
    LettersY = 95;
    LogoTop = 130; LogoBottom = 145;
VAR
    LetterOffsetX, RectangleX, RectangleY, RectY2, TopCornerOffset, AtmosX, BeamColor : CARDINAL;
    MusicByProgress : REAL;
BEGIN
    SwapVGAPages();
    Graph.ClearScreen(Graph._GCLEARSCREEN);
    DrawStars;
    MusicByProgress := -1.0;
    WHILE (MusicByProgress < 1.0) DO
        Rectangle(50, LettersY, 300, LettersY + 20, Black, TRUE);

        M(150 - CARDINAL(MusicByProgress * 105.0), LettersY);
        U(150 - CARDINAL(MusicByProgress * 75.0), LettersY);
        S(150 - CARDINAL(MusicByProgress * 45.0), LettersY);
        I(150 - CARDINAL(MusicByProgress * 15.0), LettersY);

        C(150 + CARDINAL(MusicByProgress * 15.0), LettersY);
        (* leave gap for space *)
        B(150 + CARDINAL(MusicByProgress * 75.0), LettersY);
        Y(150 + CARDINAL(MusicByProgress * 105.0), LettersY);

        SwapVGAPages();
        IF (KeyPressed()) THEN RETURN FALSE; END;
        MusicByProgress := MusicByProgress + 0.03;
    END;
    Lib.Delay(500);

    RectangleY := 120; RectY2 := 120;
    FOR RectangleX := 160 TO 210 DO
        RectangleY := 120 + ((RectangleX - 160) DIV 5);
        RectY2 := 120 + ((RectangleX - 160) DIV 2);
        Rectangle(90, 120, 230, 158, Black, TRUE);

        TopCornerOffset := (RectangleX - 160) DIV 5;
        HLine(320 - RectangleX + TopCornerOffset, RectangleY, RectangleX - TopCornerOffset, White);
        HLine(320 - RectangleX, RectY2, RectangleX, White);
        Line(320 - RectangleX + TopCornerOffset, RectangleY, 320 - RectangleX, RectY2, White);
        Line(RectangleX - TopCornerOffset, RectangleY, RectangleX, RectY2, White);

        Lib.Delay(GameSpeed);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;
    Rectangle(90, 120, 230, 158, Black, TRUE);
    HLine(120, LogoTop, 200, White);
    HLine(110, LogoBottom, 210, White);
    Line(110, LogoBottom, 120, LogoTop, White);
    Line(210, LogoBottom, 200, LogoTop, White);
    Lib.Delay (200);

    IF (KeyPressed()) THEN RETURN FALSE; END;
    Line(120, LogoTop, 130, LogoBottom, White);
    Line(200, LogoTop, 190, LogoBottom, White);
    Lib.Delay(500);
    IF (KeyPressed()) THEN RETURN FALSE; END;
    Line(130, LogoBottom, 140, LogoTop, White);
    Line(190, LogoBottom, 180, LogoTop, White);
    Lib.Delay(500);
    IF (KeyPressed()) THEN RETURN FALSE; END;
    Line(140, LogoTop, 150, LogoBottom, White);
    Line(180, LogoTop, 170, LogoBottom, White);
    Lib.Delay(500);
    IF (KeyPressed()) THEN RETURN FALSE; END;
    Line(150, LogoBottom, 160, LogoTop, White);
    Line(170, LogoBottom, 160, LogoTop, White);
    Lib.Delay(500);
    IF (KeyPressed()) THEN RETURN FALSE; END;

    FOR AtmosX := 110 TO 210 DO
        IF (AtmosX MOD 2 = 0) THEN BeamColor := Blue; ELSE BeamColor := LightestBlue; END;
        Line(AtmosX + 3, LogoTop - 1, AtmosX + 3, LogoBottom + 1, Grey);
        Line(AtmosX + 2, LogoTop - 3, AtmosX + 2, LogoBottom + 3, LightBlue);
        Line(AtmosX + 1, LogoTop - 5, AtmosX + 1, LogoBottom + 5, BeamColor);
        Line(AtmosX, LogoTop - 5, AtmosX, LogoBottom + 5, Black);
        CASE AtmosX OF
            |110:   FillAtmosFear("1000000000000000", AtmosX);
            |111:   FillAtmosFear("1110000000000000", AtmosX);
            |112:   FillAtmosFear("1221000000000000", AtmosX);
            |113:   FillAtmosFear("1002110000000000", AtmosX);
            |114:   FillAtmosFear("1000221000000000", AtmosX);
            |115:   FillAtmosFear("1000002110000000", AtmosX);
            |116:   FillAtmosFear("1000000221000000", AtmosX);
            |117:   FillAtmosFear("1220000002110000", AtmosX);
            |118:   FillAtmosFear("1222200000221000", AtmosX);
            |119:   FillAtmosFear("1222220200002110", AtmosX);
            |120:   FillAtmosFear("1222220222002221", AtmosX);
            |121:   FillAtmosFear("1222220200002111", AtmosX);
            |122:   FillAtmosFear("1222200000221221", AtmosX);
            |123:   FillAtmosFear("1220000002112001", AtmosX);
            |124:   FillAtmosFear("1000000221220001", AtmosX);
            |125:   FillAtmosFear("1000002112220001", AtmosX);
            |126:   FillAtmosFear("1000221222220001", AtmosX);
            |127:   FillAtmosFear("1002112222220001", AtmosX);
            |128:   FillAtmosFear("1221220002220001", AtmosX);
            |129:   FillAtmosFear("1112000000000001", AtmosX);
            |130:   FillAtmosFear("1000000000000001", AtmosX);
            |131:   FillAtmosFear("1112000000000001", AtmosX);
            |132:   FillAtmosFear("1221220002220001", AtmosX);
            |133:   FillAtmosFear("1002112222220001", AtmosX);
            |134:   FillAtmosFear("1000221222220001", AtmosX);
            |135:   FillAtmosFear("1000002112220001", AtmosX);
            |136:   FillAtmosFear("1220000221220001", AtmosX);
            |137:   FillAtmosFear("1222000002112001", AtmosX);
            |138:   FillAtmosFear("1022220000021221", AtmosX);
            |139:   FillAtmosFear("1000000000222111", AtmosX);
            |140:   FillAtmosFear("1000000022222221", AtmosX);
            |141:   FillAtmosFear("1000000000222111", AtmosX);
            |142:   FillAtmosFear("1022220000021221", AtmosX);
            |143:   FillAtmosFear("1222000002112001", AtmosX);
            |144:   FillAtmosFear("1220000221220001", AtmosX);
            |145:   FillAtmosFear("1000002112000001", AtmosX);
            |146:   FillAtmosFear("1000221220000001", AtmosX);
            |147:   FillAtmosFear("1002112000000001", AtmosX);
            |148:   FillAtmosFear("1221220000020001", AtmosX);
            |149:   FillAtmosFear("1112000002220001", AtmosX);
            |150:   FillAtmosFear("1200000222220001", AtmosX);
            |151:   FillAtmosFear("1112000002220001", AtmosX);
            |152:   FillAtmosFear("1221220000020001", AtmosX);
            |153:   FillAtmosFear("1002112000000001", AtmosX);
            |154:   FillAtmosFear("1002221220000001", AtmosX);
            |155:   FillAtmosFear("1002222112000001", AtmosX);
            |156:   FillAtmosFear("1002220021220001", AtmosX);
            |157:   FillAtmosFear("1002220000112001", AtmosX);
            |158:   FillAtmosFear("1002220000001221", AtmosX);
            |159:   FillAtmosFear("1002220020000111", AtmosX);
            |160:   FillAtmosFear("1002220022000221", AtmosX);
            |161:   FillAtmosFear("1002200022200111", AtmosX);
            |162:   FillAtmosFear("1000000022001221", AtmosX);
            |163:   FillAtmosFear("1000000022112001", AtmosX);
            |164:   FillAtmosFear("1000002221220001", AtmosX);
            |165:   FillAtmosFear("1000002112000001", AtmosX);
            |166:   FillAtmosFear("1000021220000001", AtmosX);
            |167:   FillAtmosFear("1200112000020001", AtmosX);
            |168:   FillAtmosFear("1221200002220001", AtmosX);
            |169:   FillAtmosFear("1110000002220001", AtmosX);
            |170:   FillAtmosFear("1000022002220001", AtmosX);
            |171:   FillAtmosFear("1112222002220001", AtmosX);
            |172:   FillAtmosFear("1221222002220001", AtmosX);
            |173:   FillAtmosFear("1002112002220001", AtmosX);
            |174:   FillAtmosFear("1000221002220001", AtmosX);
            |175:   FillAtmosFear("1000002112220001", AtmosX);
            |176:   FillAtmosFear("1000000021220001", AtmosX);
            |177:   FillAtmosFear("1000200002110001", AtmosX);
            |178:   FillAtmosFear("1000220000021221", AtmosX);
            |179:   FillAtmosFear("1000220020002111", AtmosX);
            |180:   FillAtmosFear("1000220022000221", AtmosX);
            |181:   FillAtmosFear("1000220022000111", AtmosX);
            |182:   FillAtmosFear("1000220022001221", AtmosX);
            |183:   FillAtmosFear("1000220022112001", AtmosX);
            |184:   FillAtmosFear("1000220021220001", AtmosX);
            |185:   FillAtmosFear("1000220112000001", AtmosX);
            |186:   FillAtmosFear("1000221200000001", AtmosX);
            |187:   FillAtmosFear("1002110000020001", AtmosX);
            |188:   FillAtmosFear("1221000000220001", AtmosX);
            |189:   FillAtmosFear("1112222200220001", AtmosX);
            |190:   FillAtmosFear("1222222220220001", AtmosX);
            |191:   FillAtmosFear("1112222200220001", AtmosX);
            |192:   FillAtmosFear("1221000000220001", AtmosX);
            |193:   FillAtmosFear("1002110000020001", AtmosX);
            |194:   FillAtmosFear("1000221200000001", AtmosX);
            |195:   FillAtmosFear("1000002112000001", AtmosX);
            |196:   FillAtmosFear("1000000221220001", AtmosX);
            |197:   FillAtmosFear("1220000002112001", AtmosX);
            |198:   FillAtmosFear("1222000000021221", AtmosX);
            |199:   FillAtmosFear("1222220000002111", AtmosX);
            |200:   FillAtmosFear("1222200022000221", AtmosX);
            |201:   FillAtmosFear("1222002020002110", AtmosX);
            |202:   FillAtmosFear("1220022000021000", AtmosX);
            |203:   FillAtmosFear("1200022200110000", AtmosX);
            |204:   FillAtmosFear("1000222221000000", AtmosX);
            |205:   FillAtmosFear("1000222110000000", AtmosX);
            |206:   FillAtmosFear("1002221000000000", AtmosX);
            |207:   FillAtmosFear("1002110000000000", AtmosX);
            |208:   FillAtmosFear("1221000000000000", AtmosX);
            |209:   FillAtmosFear("1110000000000000", AtmosX);
            |210:   FillAtmosFear("1000000000000000", AtmosX);
        END;
        Lib.Delay(GameSpeed * 2);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;
    Rectangle(211, LogoTop - 5, 214, LogoBottom + 5, Black, TRUE);

    FOR Count := 1 TO 4 DO
        Delay(500);
        IF (KeyPressed()) THEN RETURN FALSE; END;
    END;

    RETURN TRUE;
END WriteAtmosFear;

PROCEDURE ReadyForWriting(LetterString : ARRAY OF CHAR; WritingAddress : ADDRESS) : BOOLEAN;
VAR
    NoOfPieces, WriteX, WriteY, LetterX, LetterY, WritingSize, PieceX,
    Colour, BitMapCount : CARDINAL;
BEGIN
    FOR Count := 1 TO 5 DO
        PieceX := 0;
        FOR LetterX := 33 TO 300 BY 5 DO
            CASE LetterString[PieceX] OF
                |'0': Colour := Black;
                |'1': Colour := Lib.RANDOM (7) + 104;
                HLine (LetterX, 199, LetterX + 5, Colour);
            END;
            PieceX := PieceX + 1;
        END;
        FOR WriteY := 161 TO 199 DO
            Graph.GetImage (0, WriteY, 320, WriteY, WritingAddress);
            Graph.PutImage (0, WriteY-1, WritingAddress, Graph._GPSET);
        END;
        HLine (0, 199, 320, Black);
        FOR BitMapCount := 1 TO 2 DO
            FOR WriteY := 2 TO 160 DO
                WriteX := Lib.RANDOM(320);
                IF (WriteY MOD 2=1) THEN
                    Graph.GetImage(0, WriteY, WriteX, WriteY, WritingAddress);
                    Graph.PutImage(1, WriteY-1, WritingAddress, Graph._GPSET);
                    Graph.GetImage(WriteX+1, WriteY, 320, WriteY, WritingAddress);
                    Graph.PutImage(WriteX+1, WriteY-1, WritingAddress, Graph._GPSET)
                ELSE
                    Graph.GetImage(WriteX, WriteY, 320, WriteY, WritingAddress);
                    Graph.PutImage(WriteX-1, WriteY-1, WritingAddress, Graph._GPSET);
                    Graph.GetImage(0, WriteY, WriteX-1, WriteY, WritingAddress);
                    Graph.PutImage(0, WriteY-1, WritingAddress, Graph._GPSET);
                END;
            END;
        END;
    END;
    RETURN (NOT KeyPressed());
END ReadyForWriting;

PROCEDURE WriteThinks() : BOOLEAN;
VAR
    WritingAddress : ADDRESS;
    NotSkipped : BOOLEAN;
BEGIN
    Graph.ClearScreen (Graph._GCLEARSCREEN);

    Storage.ALLOCATE(WritingAddress, CARDINAL(Graph.ImageSize(0, 0, 320, 0)));
    NotSkipped := TRUE;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001000100111110011001001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001111100001000010101001110000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100111110010011001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001000100111110011111001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010001001000100001000010000001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010101001000100001000010000001110000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010011001000100001000010000001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001111100111110011111001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001000100111110011001001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001111100001000010101001110000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100111110010011001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("011110011111001111000111110011111000111100100010011111", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("100000000100001000100100010000100001000000100010000100", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("011100000100001111000111110000100001011100111110000100", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000010000100001001000100010000100001000100100010000100", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("111100000100001000100100010011111000111100100010000100", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001000100111110011001001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001111100001000010101001110000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100001000010101001001000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000100001000100111110010011001000100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010000001111100011110011111000111100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010000001000100100000000100001000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010000001000100101110000100001000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000010000001000100100010000100001000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000011111001111100011110011111000111100000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    IF (NotSkipped) THEN NotSkipped := ReadyForWriting("000000000000000000000000000000000000000000000000000000", WritingAddress); END;
    Storage.DEALLOCATE (WritingAddress, CARDINAL(Graph.ImageSize(0, 0, 320, 0)));
    RETURN (NOT NotSkipped);
END WriteThinks;

PROCEDURE PlayTitleSequence;
VAR
    NotSkipped : BOOLEAN;
BEGIN
    ClearScreen(_GCLEARSCREEN);
    Infinite_Software();
    Delay (12*NoteDelay);
    NotSkipped := NOT KeyPressed();
    IF (NotSkipped) THEN
        NotSkipped := FlashScreen();
    END;
    IF (NotSkipped) THEN
        NotSkipped := SpinRectangle();
    END;
    IF (NotSkipped) THEN
        NotSkipped := MakeDiamond();
    END;
    IF (NotSkipped) THEN
        NotSkipped := ExoLogo();
    END;
    IF (NotSkipped) THEN
        NotSkipped := WriteMyName();
    END;
    IF (NotSkipped) THEN
        NotSkipped := WriteAtmosFear();
    END;
    IF (NotSkipped) THEN
        NotSkipped := WriteThinks();
    END;
END PlayTitleSequence;

(* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ *)

PROCEDURE DrawVGAPlanet;
BEGIN
    Ellipse(319,199,205,76,184,TRUE);
    Ellipse(320,199,192,56,112,TRUE);
    Ellipse(319,200,139,33,4,TRUE);
    Ellipse(320,200,106,14,40,TRUE);
    Ellipse(319,199,97,9,41,TRUE);
    PutPixel(130,196,40);
    PutPixel(140,185,40);
    PutPixel(139,181,40);
    PutPixel(132,177,40);
    PutPixel(147,170,40);
    PutPixel(154,175,40);
    PutPixel(146,181,40);
    PutPixel(137,186,40);
    PutPixel(129,192,40);
    PutPixel(127,197,40);
    PutPixel(134,194,40);
    PutPixel(145,175,40);
    PutPixel(151,167,40);
    PutPixel(152,162,40);
    PutPixel(147,170,40);
    PutPixel(167,174,40);
    PutPixel(174,172,40);
    PutPixel(183,167,40);
    PutPixel(159,171,40);
    PutPixel(170,158,40);
    PutPixel(171,152,40);
    PutPixel(171,152,40);
    PutPixel(161,159,40);
    PutPixel(162,160,40);
    PutPixel(165,160,40);
    PutPixel(173,163,40);
    PutPixel(185,163,40);
    PutPixel(190,155,40);
    PutPixel(191,153,40);
    PutPixel(191,151,40);
    PutPixel(178,153,40);
    PutPixel(178,157,40);
    PutPixel(180,159,40);
    PutPixel(186,158,40);
    PutPixel(186,152,40);
    PutPixel(186,151,40);
    PutPixel(183,152,40);
    PutPixel(189,154,40);
    PutPixel(196,154,40);
    PutPixel(201,151,40);
    PutPixel(203,147,40);
    PutPixel(205,145,40);
    PutPixel(208,145,40);
    PutPixel(212,147,40);
    PutPixel(212,147,40);
    PutPixel(214,148,40);
    PutPixel(219,143,40);
    PutPixel(221,137,40);
    PutPixel(208,146,40);
    PutPixel(207,146,40);
    PutPixel(204,151,40);
    PutPixel(193,153,40);
    PutPixel(191,153,40);
    PutPixel(209,149,40);
    PutPixel(213,146,40);
    PutPixel(204,143,40);
    PutPixel(194,145,40);
    PutPixel(195,152,40);
    PutPixel(201,152,40);
    PutPixel(201,148,40);
    PutPixel(198,144,40);
    PutPixel(205,142,40);
    PutPixel(213,139,40);
    PutPixel(217,139,40);
    PutPixel(227,144,40);
    PutPixel(227,145,40);
    PutPixel(231,143,40);
    PutPixel(235,139,40);
    PutPixel(237,139,40);
    PutPixel(239,184,40);
    PutPixel(240,184,40);
    PutPixel(243,140,40);
    PutPixel(226,184,40);
    PutPixel(227,142,40);
    PutPixel(217,149,40);
    PutPixel(216,152,40);
    PutPixel(229,147,40);
    PutPixel(230,145,40);
    PutPixel(230,143,40);
    PutPixel(237,141,40);
    PutPixel(245,140,40);
    PutPixel(244,141,40);
    PutPixel(242,143,40);
    PutPixel(247,141,40);
    PutPixel(250,141,40);
    PutPixel(253,138,40);
    PutPixel(250,132,40);
    PutPixel(249,137,40);
    PutPixel(252,139,40);
    PutPixel(255,140,40);
    PutPixel(259,140,40);
    PutPixel(261,140,40);
    PutPixel(264,134,40);
    PutPixel(264,133,40);
    PutPixel(264,138,40);
    PutPixel(266,139,40);
    PutPixel(264,139,40);
    PutPixel(257,138,40);
    PutPixel(255,135,40);
    PutPixel(266,134,40);
    PutPixel(277,134,40);
    PutPixel(277,136,40);
    PutPixel(270,139,40);
    PutPixel(269,139,40);
    PutPixel(278,140,40);
    PutPixel(274,138,40);
    PutPixel(270,135,40);
    PutPixel(270,134,40);
    PutPixel(279,130,40);
    PutPixel(282,132,40);
    PutPixel(284,135,40);
    PutPixel(285,139,40);
    PutPixel(282,139,40);
    PutPixel(280,143,40);
    PutPixel(287,143,40);
    PutPixel(288,139,40);
    PutPixel(286,138,40);
    PutPixel(286,135,40);
    PutPixel(292,132,40);
    PutPixel(296,132,40);
    PutPixel(295,135,40);
    PutPixel(291,137,40);
    PutPixel(295,138,40);
    PutPixel(299,138,40);
    PutPixel(302,137,40);
    PutPixel(302,133,40);
    PutPixel(301,132,40);
    PutPixel(298,135,40);
    PutPixel(298,135,40);
    PutPixel(307,138,40);
    PutPixel(307,137,40);
    PutPixel(306,133,40);
    PutPixel(309,133,40);
    PutPixel(311,134,40);
    PutPixel(311,137,40);
    PutPixel(312,139,40);
    PutPixel(315,139,40);
    PutPixel(318,139,40);
    PutPixel(316,137,40);
    PutPixel(316,136,40);
    PutPixel(311,136,40);
    PutPixel(311,133,40);
    PutPixel(314,133,40);
    PutPixel(315,133,40);
    PutPixel(314,134,40);
    PutPixel(313,136,40);
    PutPixel(312,134,40);
    PutPixel(311,133,40);
    PutPixel(307,133,40);
    PutPixel(313,126,40);
    PutPixel(313,130,40);
    PutPixel(311,133,40);
    PutPixel(303,132,40);
    PutPixel(309,131,40);
    PutPixel(309,129,40);
    PutPixel(306,127,40);
    PutPixel(298,129,40);
    PutPixel(296,132,40);
    PutPixel(293,132,40);
    PutPixel(292,132,40);
    PutPixel(292,132,40);
    PutPixel(291,130,40);
    PutPixel(291,130,40);
    PutPixel(288,129,40);
    PutPixel(272,132,40);
    PutPixel(271,125,40);
    PutPixel(268,136,40);
    PutPixel(268,129,40);
    PutPixel(258,132,40);
    PutPixel(248,134,40);
    PutPixel(227,134,40);
    PutPixel(245,137,40);
    PutPixel(244,137,40);
    PutPixel(242,137,40);
    PutPixel(234,134,40);
    PutPixel(226,184,40);
    PutPixel(190,145,40);
    PutPixel(180,149,40);
    PutPixel(176,146,40);
    PutPixel(164,150,40);
    PutPixel(159,153,40);
    PutPixel(142,160,40);
    PutPixel(135,166,40);
    PutPixel(125,173,40);
    PutPixel(112,192,40);
    PutPixel(222,132,40);
    PutPixel(234,129,40);
    PutPixel(245,127,40);
    PutPixel(307,141,184);
    PutPixel(315,145,184);
    PutPixel(307,148,184);
    PutPixel(295,144,184);
    PutPixel(292,141,184);
    PutPixel(291,140,184);
    PutPixel(291,140,184);
    PutPixel(281,143,184);
    PutPixel(279,143,184);
    PutPixel(274,143,184);
    PutPixel(270,143,184);
    PutPixel(256,147,184);
    PutPixel(253,148,184);
    PutPixel(248,148,184);
    PutPixel(247,148,184);
    PutPixel(245,147,184);
    PutPixel(232,147,184);
    PutPixel(225,148,184);
    PutPixel(215,153,184);
    PutPixel(202,155,184);
    PutPixel(193,155,184);
    PutPixel(191,155,184);
    PutPixel(183,162,184);
    PutPixel(182,167,184);
    PutPixel(188,167,184);
    PutPixel(162,168,184);
    PutPixel(161,168,184);
    PutPixel(160,175,184);
    PutPixel(155,179,184);
    PutPixel(152,182,184);
    PutPixel(149,187,184);
    PutPixel(141,189,184);
    PutPixel(135,192,184);
    PutPixel(141,199,184);
    PutPixel(143,199,184);
    PutPixel(146,199,184);
    PutPixel(144,189,184);
    PutPixel(147,189,184);
    PutPixel(147,191,184);
    PutPixel(138,195,184);
    PutPixel(137,195,184);
    PutPixel(142,196,184);
    PutPixel(146,184,184);
    PutPixel(151,181,184);
    PutPixel(151,179,184);
    PutPixel(150,177,184);
    PutPixel(147,182,184);
    PutPixel(159,178,184);
    PutPixel(164,177,184);
    PutPixel(163,167,184);
    PutPixel(162,163,184);
    PutPixel(168,167,184);
    PutPixel(166,176,184);
    PutPixel(166,176,184);
    PutPixel(166,171,184);
    PutPixel(170,171,184);
    PutPixel(178,171,184);
    PutPixel(183,168,184);
    PutPixel(173,166,184);
    PutPixel(173,168,184);
    PutPixel(183,165,184);
    PutPixel(180,164,184);
    PutPixel(179,164,184);
    PutPixel(189,164,184);
    PutPixel(191,154,184);
    PutPixel(193,153,184);
    PutPixel(189,160,184);
    PutPixel(190,164,184);
    PutPixel(195,162,184);
    PutPixel(197,157,184);
    PutPixel(197,157,184);
    PutPixel(194,159,184);
    PutPixel(202,159,184);
    PutPixel(208,159,184);
    PutPixel(213,156,184);
    PutPixel(213,153,184);
    PutPixel(205,156,184);
    PutPixel(209,160,184);
    PutPixel(213,164,184);
    PutPixel(222,163,184);
    PutPixel(211,151,184);
    PutPixel(208,157,184);
    PutPixel(208,154,184);
    PutPixel(228,153,184);
    PutPixel(226,150,184);
    PutPixel(213,156,184);
    PutPixel(223,156,184);
    PutPixel(225,154,184);
    PutPixel(223,151,184);
    PutPixel(220,151,184);
    PutPixel(215,151,184);
    PutPixel(221,155,184);
    PutPixel(227,151,184);
    PutPixel(232,149,184);
    PutPixel(236,148,184);
    PutPixel(237,148,184);
    PutPixel(239,148,184);
    PutPixel(239,146,184);
    PutPixel(241,148,184);
    PutPixel(241,152,184);
    PutPixel(236,152,184);
    PutPixel(230,152,184);
    PutPixel(245,148,184);
    PutPixel(249,146,184);
    PutPixel(250,146,184);
    PutPixel(252,146,184);
    PutPixel(256,146,184);
    PutPixel(264,147,184);
    PutPixel(264,147,184);
    PutPixel(263,145,184);
    PutPixel(264,145,184);
    PutPixel(268,145,184);
    PutPixel(270,143,184);
    PutPixel(272,141,184);
    PutPixel(280,142,184);
    PutPixel(284,144,184);
    PutPixel(287,144,184);
    PutPixel(293,144,184);
    PutPixel(293,143,184);
    PutPixel(297,142,184);
    PutPixel(306,145,184);
    PutPixel(313,146,184);
    PutPixel(314,145,184);
    PutPixel(292,149,184);
    PutPixel(280,154,184);
    PutPixel(267,154,184);
    PutPixel(266,154,184);
    PutPixel(261,153,184);
    PutPixel(261,150,184);
    PutPixel(248,158,184);
    PutPixel(237,159,184);
    PutPixel(233,157,184);
    PutPixel(221,163,184);
    PutPixel(206,169,184);
    PutPixel(196,171,184);
    PutPixel(189,171,184);
    PutPixel(177,177,184);
    PutPixel(171,182,184);
    PutPixel(160,171,184);
    PutPixel(163,171,184);
    PutPixel(174,165,184);
    PutPixel(177,160,184);
    PutPixel(183,157,184);
    PutPixel(187,157,184);
    PutPixel(200,153,184);
    PutPixel(209,150,184);
    PutPixel(217,149,184);
    PutPixel(227,149,184);
    PutPixel(232,148,184);
    PutPixel(236,148,184);
    PutPixel(238,148,184);
    PutPixel(240,148,184);
    PutPixel(245,148,184);
    PutPixel(250,147,184);
    PutPixel(253,143,184);
    PutPixel(253,143,184);
    PutPixel(258,143,184);
    PutPixel(266,143,184);
    PutPixel(274,142,184);
    PutPixel(275,142,184);
    PutPixel(279,142,184);
    PutPixel(280,142,184);
    PutPixel(294,141,184);
    PutPixel(294,141,184);
    PutPixel(302,141,184);
    PutPixel(304,140,184);
    PutPixel(306,138,184);
    PutPixel(309,138,184);
    PutPixel(314,139,184);
    PutPixel(319,140,184);
    PutPixel(319,141,184);
    PutPixel(318,147,184);
    PutPixel(305,140,184);
    PutPixel(308,140,184);
    PutPixel(319,140,184);
    PutPixel(310,140,184);
    PutPixel(304,141,184);
    PutPixel(284,140,184);
    PutPixel(263,143,184);
    PutPixel(224,148,184);
    PutPixel(187,161,184);
    PutPixel(180,162,184);
    PutPixel(167,168,184);
    PutPixel(153,174,184);
    PutPixel(156,175,184);
    PutPixel(162,170,184);
    PutPixel(167,199,4);
    PutPixel(171,189,4);
    PutPixel(178,188,4);
    PutPixel(180,189,4);
    PutPixel(173,197,4);
    PutPixel(173,197,4);
    PutPixel(177,199,4);
    PutPixel(178,192,4);
    PutPixel(179,183,4);
    PutPixel(183,183,4);
    PutPixel(186,185,4);
    PutPixel(187,185,4);
    PutPixel(187,187,4);
    PutPixel(180,189,4);
    PutPixel(177,189,4);
    PutPixel(193,183,4);
    PutPixel(193,183,4);
    PutPixel(190,183,4);
    PutPixel(181,183,4);
    PutPixel(185,188,4);
    PutPixel(190,186,4);
    PutPixel(194,181,4);
    PutPixel(195,179,4);
    PutPixel(195,179,4);
    PutPixel(197,183,4);
    PutPixel(197,183,4);
    PutPixel(199,177,4);
    PutPixel(202,177,4);
    PutPixel(200,181,4);
    PutPixel(197,182,4);
    PutPixel(199,178,4);
    PutPixel(203,177,4);
    PutPixel(203,178,4);
    PutPixel(204,178,4);
    PutPixel(205,178,4);
    PutPixel(210,177,4);
    PutPixel(211,177,4);
    PutPixel(210,173,4);
    PutPixel(207,174,4);
    PutPixel(207,178,4);
    PutPixel(208,179,4);
    PutPixel(209,179,4);
    PutPixel(211,175,4);
    PutPixel(217,175,4);
    PutPixel(217,175,4);
    PutPixel(216,171,4);
    PutPixel(216,172,4);
    PutPixel(212,174,4);
    PutPixel(218,178,4);
    PutPixel(221,177,4);
    PutPixel(216,174,4);
    PutPixel(211,179,4);
    PutPixel(217,176,4);
    PutPixel(219,171,4);
    PutPixel(221,175,4);
    PutPixel(221,174,4);
    PutPixel(224,170,4);
    PutPixel(226,172,4);
    PutPixel(225,172,4);
    PutPixel(223,173,4);
    PutPixel(227,174,4);
    PutPixel(227,170,4);
    PutPixel(228,169,4);
    PutPixel(228,171,4);
    PutPixel(231,172,4);
    PutPixel(231,173,4);
    PutPixel(225,176,4);
    PutPixel(229,173,4);
    PutPixel(234,171,4);
    PutPixel(237,172,4);
    PutPixel(237,168,4);
    PutPixel(238,168,4);
    PutPixel(239,167,4);
    PutPixel(249,167,4);
    PutPixel(248,171,4);
    PutPixel(245,171,4);
    PutPixel(241,171,4);
    PutPixel(242,170,4);
    PutPixel(245,169,4);
    PutPixel(247,168,4);
    PutPixel(244,164,4);
    PutPixel(239,164,4);
    PutPixel(237,171,4);
    PutPixel(232,170,4);
    PutPixel(248,169,4);
    PutPixel(257,168,4);
    PutPixel(253,167,4);
    PutPixel(250,167,4);
    PutPixel(250,169,4);
    PutPixel(253,169,4);
    PutPixel(253,166,4);
    PutPixel(257,164,4);
    PutPixel(260,165,4);
    PutPixel(260,168,4);
    PutPixel(258,169,4);
    PutPixel(256,167,4);
    PutPixel(259,167,4);
    PutPixel(262,167,4);
    PutPixel(263,167,4);
    PutPixel(264,167,4);
    PutPixel(266,167,4);
    PutPixel(267,165,4);
    PutPixel(264,164,4);
    PutPixel(263,169,4);
    PutPixel(272,164,4);
    PutPixel(273,165,4);
    PutPixel(271,169,4);
    PutPixel(268,169,4);
    PutPixel(270,167,4);
    PutPixel(275,166,4);
    PutPixel(278,166,4);
    PutPixel(279,166,4);
    PutPixel(279,166,4);
    PutPixel(278,163,4);
    PutPixel(276,162,4);
    PutPixel(284,164,4);
    PutPixel(285,166,4);
    PutPixel(285,162,4);
    PutPixel(287,165,4);
    PutPixel(287,165,4);
    PutPixel(287,164,4);
    PutPixel(283,164,4);
    PutPixel(279,164,4);
    PutPixel(282,164,4);
    PutPixel(289,164,4);
    PutPixel(293,167,4);
    PutPixel(291,165,4);
    PutPixel(292,164,4);
    PutPixel(296,164,4);
    PutPixel(297,164,4);
    PutPixel(295,166,4);
    PutPixel(290,162,4);
    PutPixel(296,161,4);
    PutPixel(295,165,4);
    PutPixel(293,162,4);
    PutPixel(300,164,4);
    PutPixel(300,166,4);
    PutPixel(303,166,4);
    PutPixel(300,163,4);
    PutPixel(304,165,4);
    PutPixel(303,164,4);
    PutPixel(308,161,4);
    PutPixel(303,164,4);
    PutPixel(303,162,4);
    PutPixel(307,166,4);
    PutPixel(308,165,4);
    PutPixel(308,162,4);
    PutPixel(311,162,4);
    PutPixel(312,164,4);
    PutPixel(312,167,4);
    PutPixel(315,167,4);
    PutPixel(318,167,4);
    PutPixel(318,163,4);
    PutPixel(313,161,4);
    PutPixel(315,164,4);
    PutPixel(316,164,4);
    PutPixel(318,163,4);
    PutPixel(319,165,4);
    PutPixel(315,156,4);
    PutPixel(307,156,4);
    PutPixel(300,158,4);
    PutPixel(282,161,4);
    PutPixel(270,161,4);
    PutPixel(258,161,4);
    PutPixel(242,161,4);
    PutPixel(226,167,4);
    PutPixel(211,169,4);
    PutPixel(201,173,4);
    PutPixel(187,175,4);
    PutPixel(175,184,4);
    PutPixel(163,192,4);
    PutPixel(161,199,4);
    PutPixel(165,184,4);
    PutPixel(260,154,4);
    PutPixel(288,152,4);
    PutPixel(181,199,40);
    PutPixel(188,198,40);
    PutPixel(189,195,40);
    PutPixel(186,193,40);
    PutPixel(189,196,40);
    PutPixel(190,197,40);
    PutPixel(189,193,40);
    PutPixel(184,194,40);
    PutPixel(180,197,40);
    PutPixel(184,197,40);
    PutPixel(192,192,40);
    PutPixel(202,187,40);
    PutPixel(196,184,40);
    PutPixel(188,186,40);
    PutPixel(193,191,40);
    PutPixel(197,191,40);
    PutPixel(197,189,40);
    PutPixel(196,188,40);
    PutPixel(196,188,40);
    PutPixel(189,188,40);
    PutPixel(198,188,40);
    PutPixel(201,188,40);
    PutPixel(203,187,40);
    PutPixel(203,182,40);
    PutPixel(203,181,40);
    PutPixel(204,183,40);
    PutPixel(199,183,40);
    PutPixel(194,185,40);
    PutPixel(191,190,40);
    PutPixel(212,184,40);
    PutPixel(212,182,40);
    PutPixel(209,180,40);
    PutPixel(206,182,40);
    PutPixel(207,185,40);
    PutPixel(198,185,40);
    PutPixel(212,186,40);
    PutPixel(215,184,40);
    PutPixel(215,181,40);
    PutPixel(215,180,40);
    PutPixel(222,178,40);
    PutPixel(222,179,40);
    PutPixel(220,181,40);
    PutPixel(218,182,40);
    PutPixel(223,183,40);
    PutPixel(223,178,40);
    PutPixel(221,178,40);
    PutPixel(222,177,40);
    PutPixel(228,174,40);
    PutPixel(228,171,40);
    PutPixel(217,177,40);
    PutPixel(222,177,40);
    PutPixel(212,179,40);
    PutPixel(224,176,40);
    PutPixel(227,175,40);
    PutPixel(229,176,40);
    PutPixel(230,179,40);
    PutPixel(230,180,40);
    PutPixel(228,178,40);
    PutPixel(234,172,40);
    PutPixel(236,176,40);
    PutPixel(235,176,40);
    PutPixel(233,174,40);
    PutPixel(239,174,40);
    PutPixel(240,173,40);
    PutPixel(242,173,40);
    PutPixel(242,177,40);
    PutPixel(237,180,40);
    PutPixel(249,172,40);
    PutPixel(250,171,40);
    PutPixel(245,174,40);
    PutPixel(246,175,40);
    PutPixel(246,171,40);
    PutPixel(256,174,40);
    PutPixel(254,172,40);
    PutPixel(249,174,40);
    PutPixel(259,168,40);
    PutPixel(262,168,40);
    PutPixel(257,173,40);
    PutPixel(260,171,40);
    PutPixel(263,171,40);
    PutPixel(265,172,40);
    PutPixel(266,171,40);
    PutPixel(270,170,40);
    PutPixel(276,170,40);
    PutPixel(278,169,40);
    PutPixel(277,167,40);
    PutPixel(263,170,40);
    PutPixel(269,167,40);
    PutPixel(274,168,40);
    PutPixel(270,169,40);
    PutPixel(281,167,40);
    PutPixel(284,167,40);
    PutPixel(284,169,40);
    PutPixel(282,171,40);
    PutPixel(289,168,40);
    PutPixel(289,168,40);
    PutPixel(288,169,40);
    PutPixel(287,167,40);
    PutPixel(295,167,40);
    PutPixel(294,167,40);
    PutPixel(291,169,40);
    PutPixel(291,171,40);
    PutPixel(295,171,40);
    PutPixel(296,167,40);
    PutPixel(296,166,40);
    PutPixel(299,166,40);
    PutPixel(299,168,40);
    PutPixel(299,168,40);
    PutPixel(303,168,40);
    PutPixel(303,167,40);
    PutPixel(305,167,40);
    PutPixel(306,167,40);
    PutPixel(307,168,40);
    PutPixel(309,166,40);
    PutPixel(311,166,40);
    PutPixel(312,171,40);
    PutPixel(315,168,40);
    PutPixel(315,167,40);
    PutPixel(317,169,40);
    PutPixel(313,177,40);
    PutPixel(303,175,40);
    PutPixel(297,175,40);
    PutPixel(286,175,40);
    PutPixel(278,173,40);
    PutPixel(270,173,40);
    PutPixel(263,175,40);
    PutPixel(258,178,40);
    PutPixel(256,178,40);
    PutPixel(250,179,40);
    PutPixel(244,180,40);
    PutPixel(233,183,40);
    PutPixel(224,184,40);
    PutPixel(220,184,40);
    PutPixel(213,188,40);
    PutPixel(204,191,40);
    PutPixel(214,198,112);
    PutPixel(215,197,112);
    PutPixel(215,193,112);
    PutPixel(208,196,112);
    PutPixel(211,199,112);
    PutPixel(218,197,112);
    PutPixel(222,191,112);
    PutPixel(225,190,112);
    PutPixel(228,190,112);
    PutPixel(230,190,112);
    PutPixel(232,188,112);
    PutPixel(232,183,112);
    PutPixel(233,186,112);
    PutPixel(234,187,112);
    PutPixel(235,187,112);
    PutPixel(237,187,112);
    PutPixel(240,188,112);
    PutPixel(241,190,112);
    PutPixel(246,187,112);
    PutPixel(247,186,112);
    PutPixel(248,185,112);
    PutPixel(254,184,112);
    PutPixel(258,183,112);
    PutPixel(259,182,112);
    PutPixel(260,181,112);
    PutPixel(260,183,112);
    PutPixel(261,186,112);
    PutPixel(263,186,112);
    PutPixel(263,186,112);
    PutPixel(266,185,112);
    PutPixel(269,185,112);
    PutPixel(277,186,112);
    PutPixel(282,185,112);
    PutPixel(284,183,112);
    PutPixel(284,183,112);
    PutPixel(270,184,112);
    PutPixel(265,184,112);
    PutPixel(266,181,112);
    PutPixel(271,182,112);
    PutPixel(272,183,112);
    PutPixel(274,187,112);
    PutPixel(280,183,112);
    PutPixel(281,182,112);
    PutPixel(278,182,112);
    PutPixel(278,182,112);
    PutPixel(277,183,112);
    PutPixel(283,183,112);
    PutPixel(289,183,112);
    PutPixel(290,183,112);
    PutPixel(291,183,112);
    PutPixel(292,183,112);
    PutPixel(293,181,112);
    PutPixel(294,181,112);
    PutPixel(294,181,112);
    PutPixel(292,181,112);
    PutPixel(291,178,112);
    PutPixel(289,178,112);
    PutPixel(287,182,112);
    PutPixel(297,185,112);
    PutPixel(297,182,112);
    PutPixel(297,182,112);
    PutPixel(299,182,112);
    PutPixel(301,181,112);
    PutPixel(303,180,112);
    PutPixel(299,179,112);
    PutPixel(305,182,112);
    PutPixel(307,182,112);
    PutPixel(309,181,112);
    PutPixel(311,184,112);
    PutPixel(311,185,112);
    PutPixel(312,184,112);
    PutPixel(313,182,112);
    PutPixel(315,183,112);
    PutPixel(309,183,112);
    PutPixel(315,177,112);
    PutPixel(316,179,112);
    PutPixel(319,182,112);
    PutPixel(319,186,112);
    PutPixel(319,186,112);
    PutPixel(319,186,112);
    PutPixel(315,185,112);
    PutPixel(316,180,112);
    PutPixel(311,179,112);
    PutPixel(304,177,112);
    PutPixel(275,179,112);
    PutPixel(272,184,112);
    PutPixel(275,180,112);
    PutPixel(273,184,112);
    PutPixel(243,187,112);
    PutPixel(245,188,112);
    PutPixel(246,184,112);
    PutPixel(246,183,112);
    PutPixel(217,199,4);
    PutPixel(222,199,4);
    PutPixel(220,197,4);
    PutPixel(220,196,4);
    PutPixel(226,194,4);
    PutPixel(228,193,4);
    PutPixel(229,193,4);
    PutPixel(317,184,4);
    PutPixel(313,189,4);
    PutPixel(311,190,4);
    PutPixel(310,187,4);
    PutPixel(311,187,4);
    PutPixel(313,187,4);
    PutPixel(314,184,4);
    PutPixel(313,183,4);
    PutPixel(312,183,4);
    PutPixel(309,185,4);
    PutPixel(307,191,4);
    PutPixel(306,191,4);
    PutPixel(295,187,4);
    PutPixel(297,187,4);
    PutPixel(300,190,4);
    PutPixel(304,189,4);
    PutPixel(306,185,4);
    PutPixel(298,188,4);
    PutPixel(294,188,4);
    PutPixel(290,188,4);
    PutPixel(284,189,4);
    PutPixel(283,189,4);
    PutPixel(282,189,4);
    PutPixel(277,190,4);
    PutPixel(277,191,4);
    PutPixel(273,191,4);
    PutPixel(281,190,4);
    PutPixel(284,188,4);
    PutPixel(283,41,4);
    PutPixel(283,41,4);
    PutPixel(277,41,4);
    PutPixel(276,41,4);
    PutPixel(277,188,4);
    PutPixel(281,184,4);
    PutPixel(283,184,4);
    PutPixel(285,184,4);
    PutPixel(274,187,4);
    PutPixel(269,187,4);
    PutPixel(266,189,4);
    PutPixel(265,190,4);
    PutPixel(262,190,4);
    PutPixel(260,190,4);
    PutPixel(239,191,4);
    PutPixel(247,187,4);
    PutPixel(249,186,4);
    PutPixel(247,187,4);
    PutPixel(243,188,4);
    PutPixel(243,189,4);
    PutPixel(248,190,4);
    PutPixel(253,190,4);
    PutPixel(256,188,4);
    PutPixel(257,187,4);
    PutPixel(247,191,4);
    PutPixel(237,192,4);
    PutPixel(248,199,41);
    PutPixel(246,199,41);
    PutPixel(248,194,41);
    PutPixel(250,194,41);
    PutPixel(262,194,41);
    PutPixel(266,194,41);
    PutPixel(268,193,41);
    PutPixel(272,192,41);
    PutPixel(274,191,41);
    PutPixel(313,190,41);
    PutPixel(319,191,41);
    PutPixel(318,191,41);
    PutPixel(313,191,41);
    PutPixel(307,191,41);
    PutPixel(305,191,41);
    PutPixel(303,192,41);
    PutPixel(301,192,41);
    PutPixel(300,192,41);
    PutPixel(286,192,41);
    PutPixel(281,194,41);
    PutPixel(279,192,41);
    PutPixel(285,188,41);
    PutPixel(285,190,41);
    PutPixel(275,193,41);
    PutPixel(262,192,41);
    PutPixel(259,194,41);
    PutPixel(257,195,41);
    PutPixel(247,199,41);
    PutPixel(244,199,41);
    PutPixel(241,199,41);
    PutPixel(239,199,41);
END DrawVGAPlanet;

PROCEDURE PlaneToPlanet;
VAR
    NegPlaneAddress : ADDRESS;
    NegPlaneSize, RandomRed : CARDINAL;
    Skipped : BOOLEAN;
BEGIN
    Graph.ClearScreen(Graph._GCLEARSCREEN);
    NegPlaneSize := CARDINAL (Graph.ImageSize (249, 59, 319, 151));
    Storage.ALLOCATE (NegPlaneAddress, NegPlaneSize);
    DrawVGAPlanet;
    FOR Count := 1 TO 100 DO
        RandomRed := Lib.RANDOM(4) + 109;
        Plot (Lib.RANDOM(220) + 100, Lib.RANDOM(80) + 120, RandomRed);
    END;
    FOR Count := 1 TO 50 DO
        Plot (Lib.RANDOM(320), Lib.RANDOM(200), Lib.RANDOM(10) + 109);
    END;
    Graph.GetImage (249, 59, 319, 151, NegPlaneAddress);
    PlaneX := 250; Width := 30; Height := 15;
    FOR PlaneY := 60 TO 150 DO
        Skipped := KeyPressed();
        IF NOT (Skipped) THEN
            DrawPlane (PlaneX, PlaneY, Width, Height);
            Lib.Delay (40);
            IF (PlaneY MOD 2 = 0) THEN
                PlaneX := PlaneX + 1;
            END;
            IF (PlaneY MOD 3 = 0) THEN
                Width := Width - 2;
                Height := Height - 1;
            END;
            IF (Width < 0) THEN
                Width := 0;
            END;
            IF (Height < 0) THEN
                Height := 0;
            END;
            Graph.PutImage (249, 59, NegPlaneAddress, Graph._GPSET);
        END;
    END;
    IF (NOT Skipped) THEN
        Lib.Delay (500);
    END;
    Storage.DEALLOCATE (NegPlaneAddress, NegPlaneSize);
END PlaneToPlanet;

END Intro.
